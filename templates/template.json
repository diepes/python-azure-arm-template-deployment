{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",

  "parameters": {
    "adminUserName": { "type": "string", "defaultValue": "azureSample"
                      ,"metadata": { "description": "User name for the Virtual Machine."} },
    "sshKeyData": { "type": "string", "metadata": { "description": "SSH rsa public key file as a string." } },
    "bootstrapScriptBase64":  { "type": "string", "metadata": { "description": "shell script encoded base64" } },
    "dnsLabelPrefix": { "type": "string" ,"metadata": 
        { "description": "Unique DNS Name for the Public IP used to access the Virtual Machine." } },
    "vmSize": { "type": "string", "defaultValue": "Standard_D2s_v3", "metadata": { "description": "Size of the VM" } },
    "vmName": { "type": "string", "metadata": { "description": "Name of the VM" } },  
    "vmEnvironment": { "type": "string", "defaultValue": "INF02", "metadata": { "description": "Environment e.g. DEV01 " }  },
    "rgVNET" : { "type": "string", "defaultValue": "[concat(parameters('vmEnvironment'), '')]"
                   ,"metadata": { "description": "Resource group containing the VNET, default DEV01" } },
    "imagePublisher": { "type": "string", "defaultValue": "canonical", "metadata": { "description": "Name of the image publisher" }  },
    "imageOffer": { "type": "string", "defaultValue": "ubuntuserver", "metadata": { "description": "Name of the image offer" }  },
    "imageSku": { "type": "string", "defaultValue": "16.04-LTS", "metadata": { "description": "Name of the image sku" } },
    "imageVersion": { "type": "string", "defaultValue": "latest", "metadata": { "description": "Name of the image sku" }  },
    "subnetName": { "type": "string", "defaultValue": "[concat(parameters('vmEnvironment'), '-SUBNET')]"
                   ,"metadata": { "description": "Name of the subnet" } },
    "virtualNetworkName": { "type": "string","metadata": { "description": "Name of the virtual network, e.g. VNET-NONPRD" } },
    "availabilitySet_name": { "defaultValue": "[concat(parameters('vmEnvironment'), '-AvailabilitySet')]", "type": "string" }
    },

  "variables": {
    "doc-info1": "https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-template-functions-resource#resourcegroup",

    "rgLocation": "[resourceGroup().location]",
    "rgNameServer": "[resourceGroup().name]",
    "rgNameVnet": "[parameters('rgVNET')]",
    "storageAccountName-INFO": "Storage account between 3 and 24 characters in len only numbers and lower-case letters.",
    "storageAccountName": "[concat(parameters('vmEnvironment'),'disk',uniquestring(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "nicName": "[concat(parameters('vmName'), '-eth0')]",
    "osDiskName": "[concat(parameters('vmName'), '-osdisk')]",
    "publicIPAddressName": "[concat(parameters('vmName'), '-PublicIP')]",
    "publicIPAddressType": "Dynamic",
    "storageAccountType": "Standard_LRS",
    "networkSecurityGroupName": "[concat(parameters('vmName'), '-NSG')]",
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "debug01": "/subscriptions/cfdb116f-fc7d-4e75-9630-9d1da11b73dd/resourceGroups/DEV01/providers/Microsoft.Network/virtualNetworks/VNET-NONPRD/subnets/DEV01-SUBNET",
    "IdVnet": "[ resourceId(   parameters('rgVNET'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')   ) ]",
    "subnetRef": "[concat(variables('IdVnet'),'/subnets/',parameters('subnetName'))]",
    "IdPubIPAddress" : "[concat(variables('IdVnet'),'/subnets/',parameters('subnetName'))]",
    "apiVersion": "2015-06-15"
  },

  "resources": [
    { 
      "apiVersion": "2017-05-10",
      "name": "nestedTemplate",
      "type": "Microsoft.Resources/deployments",
      "comments": "switch to rgNameVnet only for creation of static ip",
      "resourceGroup": "[variable('rgNameVnet')]",
      "location": "[variables('rgLocation')]",
      "properties": {
        "mode": "Incremental",
        "template": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {},
            "resources": [
                {
                  "type": "Microsoft.Network/publicIPAddresses",
                  "name": "[variables('publicIPAddressName')]",
                  "apiVersion": "2018-02-01",
                  "location": "[variables('rgLocation')]",
                  "properties": {
                    "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                    "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsLabelPrefix')]"
                    },
                    "ipTags": [] 
                  },
                  "dependsOn": []
                }
            ]
       }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[variables('rgLocation')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "apiVersion": "2017-06-01",
      "location": "[variables('rgLocation')]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh_rule",
            "properties": {
              "description": "Locks inbound down to ssh default port 22.",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 123,
              "direction": "Inbound"
            }
          }
        ]
      }
    },

    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "apiVersion": "2018-02-01",
      "location": "[variables('rgLocation')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId(  variables('rgNameVnet'), 'Microsoft.Network/publicIPAddresses', variables('publicIPAddressName')  )]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      },
      "dependsOn": []
    },

    {
            "comments": "PES: copy from template: resource: '/subscriptions/7023221c-6084-483c-bb62-f8db6950fc34/resourceGroups/pieter-rg/providers/Microsoft.Compute/availabilitySets/pieter-AvailabilitySetXXX'.",
            "type": "Microsoft.Compute/availabilitySets",
            "sku": {
                "name": "Aligned"
            },
            "name": "[parameters('availabilitySet_name')]",
            "apiVersion": "2017-12-01",
            "location": "[variables('rgLocation')]",
            "tags": {},
            "scale": null,
            "properties": {
                "platformUpdateDomainCount": 3,
                "platformFaultDomainCount": 2,
                "virtualMachines": []
            },
            "dependsOn": []
    },


    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "apiVersion": "2017-12-01",
      "location": "[variables('rgLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet_name'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet_name'))]"
                },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[variables('osDiskName')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "diskSizeGB": 30
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },

    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'), '/installsaltstack')]",
      "apiVersion": "2015-06-15",
      "location": "[variables('rgLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "protectedSettings": {
          "script": "[parameters('bootstrapScriptBase64')]"
          }
      }
    }
  ]
}

